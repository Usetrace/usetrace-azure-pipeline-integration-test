trigger:
- main

pool:
  name: 'Azure Pipelines'

jobs:
- job: triggerATrace
  steps:
  - script: |
      git clone https://github.com/usetrace/universal-integration.git
      npm install --prefix universal-integration

      # Passing some parameters as env vars
      export INPUT_BUILD_TIMEOUT_SECONDS=900
      export INPUT_FAIL_ON_FAILED_TRACES=false

      # Parameters can be passed by the command line too. These have precedence over env var ones
      # PASS
      npm run usetrace --prefix universal-integration -- --traceId Zux6zjrzOwAYPAJK_cLMvZ3_xVspdHDW --browsers chrome,firefox
      
      # FAILS
      #npm run usetrace --prefix universal-integration -- --traceId ZvW-QjrzOwAYPUUKZ2_i6uzz8ZyL8cpe
      
      # RUNS PROJECT
      #npm run usetrace --prefix universal-integration -- --projectId Zux6YTrzOwAYPAJBLnY5jfa92z4wlijK
    displayName: 'Runs the integration'

  - publish: ./output.json
    artifact: output
    displayName: 'Publish the output artifact'


- job: failedExecution
  dependsOn: triggerATrace
  condition: failed('triggerATrace')
  steps:
  - download: current
    artifact: output
    displayName: 'Download integrationOutput artifact'
  
  - script: |
      echo "Contents of output.json:"
      cat $(Pipeline.Workspace)/output/output.json
  
  - script: |
      cat output.json | jq '.status'
      echo FAILURE!!!
    displayName: 'Failed execution'


- job: successfulExecution
  dependsOn: triggerATrace
  condition: succeeded('triggerATrace')
  steps:
  - download: current
    artifact: output
    displayName: 'Download output artifact'

  - script: |
      ls
      pwd
    displayName: 'DEBUG'

  - script: |
      echo "Contents of output.json:"
      cat ./output/output.json
    displayName: 'Check content 1'

  - script: |
      cat output.json | jq '.status'
      echo SUCCESS!!!
    displayName: 'Successful Execution'

