trigger:
- main

pool:
  name: 'Azure Pipelines'

jobs:
- job: triggerATrace
  steps:
  - script: |
      git clone https://github.com/usetrace/universal-integration.git
      npm install --prefix universal-integration

      # Passing some parameters as env vars
      export INPUT_BUILD_TIMEOUT_SECONDS=900
      export INPUT_FAIL_ON_FAILED_TRACES=true

      # Parameters can be passed by the command line too. These have precedence over env var ones
      # npm run usetrace --prefix universal-integration -- --traceId Zux6zjrzOwAYPAJK_cLMvZ3_xVspdHDW --browsers chrome,firefox

      # Running project
      npm run usetrace --prefix universal-integration -- --projectId Zux6YTrzOwAYPAJBLnY5jfa92z4wlijK

      # Capturing the content of the output.json
      content=$(cat output.json)
      echo "##vso[task.setvariable variable=jsonContent;isoutput=true]$content"
    displayName: 'Runs the integration'

- job: failedExecution
  dependsOn: triggerATrace
  condition: failed('triggerATrace')
  variables:
    jsonContent: $[ dependencies.triggerATrace.outputs['setVar.jsonContent'] ]
  steps:
  - script: |
      echo "Contents of output.json:"
      echo '$(jsonContent)' | jq -r '.report.failures'
      echo '$(jsonContent)' | jq -r '.report'

      # Storing a value in a variable for later use
      keyValue=$(echo '$(jsonContent)' | jq -r '.key')
      echo "The value of 'key' is: $keyValue"
      echo FAILURE!!!
    displayName: 'Failed Execution'

- job: successfulExecution
  dependsOn: triggerATrace
  condition: succeeded('triggerATrace')
  variables:
    jsonContent: $[ dependencies.triggerATrace.outputs['setVar.jsonContent'] ]
  steps:
  - script: |
      echo "Contents of output.json:"
      echo '$(jsonContent)'
      echo "-------------------------------------------------------"
      echo '$(jsonContent)' | jq -r '.report.failures'
      echo '$(jsonContent)' | jq -r '.report'
      echo '$(jsonContent)' | jq -r '.traces'

      # Storing a value in a variable for later use
      keyValue=$(echo '$(jsonContent)' | jq -r '.failures')
      echo "The value of 'key' is: $keyValue"
      echo SUCCESS!!!
    displayName: 'Successful Execution'
